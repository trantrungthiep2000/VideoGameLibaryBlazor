@page "/videogame"
@page "/videogame/{videoGameId:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (VideoGameId is null)
{
    <PageTitle>Add a new video game</PageTitle>
    <h3>Add a new video game</h3>
}
else
{
    <PageTitle>Edit a video game</PageTitle>
    <h3>Edit a video game</h3>
}

<EditForm Model="videoGame" OnSubmit="HandleSubmit">
    <div>
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="videoGame.Title" class="form-control"></InputText>
    </div>
    <div>
        <label for="publisher">Publisher</label>
        <InputText id="publisher" @bind-Value="videoGame.Publisher" class="form-control"></InputText>
    </div>
    <div>
        <label for="releaseYear">Release year</label>
        <InputNumber id="releaseYear" @bind-Value="videoGame.ReleaseYear" class="form-control"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    @if (VideoGameId is not null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteVideoGame">Delete</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? VideoGameId { get; set; }
    VideoGame videoGame = new VideoGame() { Title = "Title of game" };

    /// <summary>
    /// On parameters set async
    /// </summary>
    /// <returns>Task</returns>
    /// CreatedBy: ThiepTT(18/09/2023)
    protected override async Task OnParametersSetAsync()
    {
        if (VideoGameId is not null)
        {
            var result = await Http.GetFromJsonAsync<VideoGame>($"api/VideoGames/GetVideoGameById/{VideoGameId}");

            if (result is not null)
            {
                videoGame = result;
            }
        }
    }

    /// <summary>
    /// Delete video game
    /// </summary>
    /// <returns>Task</returns>
    /// CreatedBy: ThiepTT(18/09/2023)
    async Task DeleteVideoGame()
    {
        await Http.DeleteAsync($"api/VideoGames/DeleteVideoGame/{VideoGameId}");
        NavigationManager.NavigateTo($"/videogames");
    }

    /// <summary>
    /// Handle submit
    /// </summary>
    /// <returns>Task</returns>
    /// CreatedBy: ThiepTT(18/09/2023)
    async Task HandleSubmit()
    {
        if (VideoGameId is null)
        {
            await Http.PostAsJsonAsync("api/VideoGames/CreateVideoGame", videoGame);
        }
        else
        {
            await Http.PutAsJsonAsync($"api/VideoGames/UpdateVideoGame/{VideoGameId}", videoGame);
        }

        NavigationManager.NavigateTo($"/videogames");
    }
}
