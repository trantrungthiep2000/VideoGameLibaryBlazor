@page "/videogames"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Video games</h3>

<button @onclick="AddVideoGame" class="btn btn-primary">Add video game</button>
<br />
<br />

@if (videoGames.Count <= 0)
{
    <span>Loading Video Games...</span>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Publisher</th>
                <th scope="col">ReleaseYear</th>
                <th scope="col">Function</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var videoGame in videoGames)
            {
                <tr>
                    <td>@videoGame.Title</td>
                    <td>@videoGame.Publisher</td>
                    <td>@videoGame.ReleaseYear</td>
                    <td>
                        <button @onclick="(() => EditVideoGame(videoGame.Id))" class="btn btn-primary">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<VideoGame> videoGames = new List<VideoGame>();

    /// <summary>
    /// On initialized async
    /// </summary>
    /// <returns>Task</returns>
    /// CreatedBy: ThiepTT(18/09/2023)
    protected override async Task OnInitializedAsync()
    {
        var res = await Http.GetFromJsonAsync<List<VideoGame>>("api/VideoGames/GetAllVideoGames");

        if (res is not null)
        {
            videoGames = res;
        }
    }

    /// <summary>
    /// Add video game
    /// </summary>
    /// CreatedBy: ThiepTT(18/09/2023)
    void AddVideoGame()
    {
        NavigationManager.NavigateTo("/videogame");
    }

    /// <summary>
    /// Edit video game
    /// </summary>
    /// <param name="videoGameId">Id of video game</param>
    /// CreatedBy: ThiepTT(18/09/2023)
    void EditVideoGame(int videoGameId)
    {
        NavigationManager.NavigateTo($"/videogame/{videoGameId}");
    }
}